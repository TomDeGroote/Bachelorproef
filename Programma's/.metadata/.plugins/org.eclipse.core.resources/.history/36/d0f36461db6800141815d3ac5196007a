import java.util.ArrayList;


public class Equation {

	NonTerminal start;
	int containsNT = 1;
	String name;
	ArrayList<Symbol> elements;
	public Equation(String name, ArrayList<Symbol> elements) {
		this.name = name;
		if(elements == null) {
			this.elements = new ArrayList<Symbol>();
			elements.add(new Symbol("E", this, 0));
		} else {
			this.elements = elements;
		}
	}
	
	public boolean containsNonTerminal() {
		if(containsNT == 0)
			return true;
		else 
			return false;
	}
	
	public void decreaseNonTerminal() {
		containsNT--;
	}
	
	public void increaseNonTerminal() {
		containsNT++;
	}
	
	public ArrayList<Symbol> getElements() {
		return elements;
	}
	
	public ArrayList<Equation> Expand() {
		ArrayList<Equation> expansion = new ArrayList<>();
		for(int i = 0; i < elements.size(); i++) {
			if(elements.get(i).isNonTerminal()) {
				// vervanging gebeurt mag uit bovenste lus
				i = elements.size();
				
				// mogelijkheid 1 vervang E door E*E
				ArrayList<Symbol> newElements = new ArrayList<>();
				for(int j = 0; j < i; j++) {
					newElements.add(elements.get(j));
				}
				newElements.add(new Symbol("E", this, 0));
				newElements.add(new Symbol("*", this, 2));
				newElements.add(new Symbol("E", this, 0));
				for(int j = i + 1; j < elements.size(); j++) {
					newElements.add(elements.get(j));
				}
				expansion.add(new Equation("m1", newElements));
				
				// mogelijkheid 2 vervang E door 1
				ArrayList<Symbol> newElements2 = new ArrayList<>();
				for(int j = 0; j < i; j++) {
					newElements.add(elements.get(j));
				}
				newElements.add(new Symbol("1", this, 1));
				for(int j = i + 1; j < elements.size(); j++) {
					newElements.add(elements.get(j));
				}
				expansion.add(new Equation("m1", newElements));
				
				// mogelijkheid 3 vervang E door 2
				ArrayList<Symbol> newElements3 = new ArrayList<>();
				for(int j = 0; j < i; j++) {
					newElements.add(elements.get(j));
				}
				newElements.add(new Symbol("2", this, 1));
				for(int j = i + 1; j < elements.size(); j++) {
					newElements.add(elements.get(j));
				}
				expansion.add(new Equation("m1", newElements));
				
				// mogelijkheid 4 vervang E door 3
				ArrayList<Symbol> newElements4 = new ArrayList<>();
				for(int j = 0; j < i; j++) {
					newElements.add(elements.get(j));
				}
				newElements.add(new Symbol("3", this, 1));
				for(int j = i + 1; j < elements.size(); j++) {
					newElements.add(elements.get(j));
				}
				expansion.add(new Equation("m1", newElements));
			}
		}
		return expansion;
	}
}
