import java.util.ArrayList;


public class Equation {

	NonTerminal start;
	int containsNT = 1;
	ArrayList<Symbol> elements;
	public Equation(ArrayList<Symbol> elements) {
		if(elements == null) {
			this.elements = new ArrayList<Symbol>();
			this.elements.add(new NonTerminal("E"));
		} else {
			this.elements = elements;
		}
	}
	
	public boolean containsNonTerminal() {
		if(containsNT == 0)
			return true;
		else 
			return false;
	}
	
	public void decreaseNonTerminal() {
		containsNT--;
	}
	
	public void increaseNonTerminal() {
		containsNT++;
	}
	
	public ArrayList<Symbol> getElements() {
		return elements;
	}
	
	public ArrayList<Equation> Expand() {
		ArrayList<Equation> expansion = new ArrayList<>();
		for(int i = 0; i < elements.size(); i++) {
			if(elements.get(i).isNonTerminal()) {				
				Expansions.getExpansions(((NonTerminal) elements).get(i).getValue());
				// vervanging gebeurt mag uit bovenste lus
				i = elements.size();
			}
		}
		return expansion;
	}
}
