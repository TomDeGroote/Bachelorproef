import java.util.ArrayList;


public class Equation {

	NonTerminal start;
	int numberOfNonTerminals = 1;
	ArrayList<Symbol> elements;
	
	public Equation(ArrayList<Symbol> elements, int numberOfNonTerminals) {
		this.nu
		if(elements == null) {
			this.elements = new ArrayList<Symbol>();
			this.elements.add(new NonTerminal("E"));
		} else {
			this.elements = elements;
		}
	}
	
	public boolean containsNonTerminal() {
		if(numberOfNonTerminals == 0)
			return true;
		else 
			return false;
	}
	
	public ArrayList<Symbol> getElements() {
		return elements;
	}
	
	public ArrayList<Equation> Expand() {
		ArrayList<Equation> expansion = new ArrayList<>();
		
		
		for(int i = 1; i < elements.size(); i++) {
			if(elements.get(0).isNonTerminal()) {
				for(ArrayList<Symbol> uitbreiding : Expansions.getExpansions(((NonTerminal) elements.get(i)).getValue())) {
					ArrayList<Symbol> newElements = new ArrayList<>();
					for(int j = 0; j < i; j++) {
						newElements.add(elements.get(j));
					}
					for(Symbol s : uitbreiding) {
						newElements.add(s);
					}
					for(int j = i + 1; j < elements.size(); j++) {
						newElements.add(elements.get(j));
					}
					expansion.add(new Equation(newElements));
				}
				// vervanging gebeurt mag uit bovenste lus
				i = elements.size();
			}
		}
		return expansion;
	}
}
